{"version":3,"file":"glissando-mithril.umd.js","sources":["../../../node_modules/mithril-stream-standalone/dist/mithril-stream-standalone.module.js","../../glissando/dist/glissando.module.js","../src/GlissandoSlider.ts","../src/useGlissandoModel.ts"],"sourcesContent":["function g(t) {\n  return p(function() {\n    return t.map(function(e) {\n      return e();\n    });\n  }, t);\n}\nfunction h(t, e, u) {\n  var n = u.map(function(c) {\n    var f = t(e, c);\n    return f !== i.SKIP && (e = f), f;\n  });\n  return n(e), n;\n}\nfunction l(t, e) {\n  var u = t.map(function(c) {\n    return c[0];\n  }), n = p(function() {\n    var c = arguments[arguments.length - 1];\n    return u.forEach(function(f, r) {\n      c.indexOf(f) > -1 && (e = t[r][1](e, f()));\n    }), e;\n  }, u);\n  return n(e), n;\n}\nfunction _() {\n  var t = arguments[0], e = Array.prototype.slice.call(arguments, 1);\n  return g(e).map(function(u) {\n    return t.apply(void 0, u);\n  });\n}\nfunction s(t) {\n  return t._state === \"pending\" || t._state === \"active\" || t._state === \"changing\";\n}\nvar i = function(t) {\n  var e = [], u = [];\n  function n(r) {\n    return arguments.length && r !== i.SKIP && (t = r, s(n) && (n._changing(), n._state = \"active\", e.slice().forEach(function(a, o) {\n      s(a) && a(this[o](t));\n    }, u.slice()))), t;\n  }\n  n.constructor = i, n._state = arguments.length && t !== i.SKIP ? \"active\" : \"pending\", n._parents = [], n._changing = function() {\n    s(n) && (n._state = \"changing\"), e.forEach(function(r) {\n      r._changing();\n    });\n  }, n._map = function(r, a) {\n    var o = a ? i() : i(r(t));\n    return o._parents.push(n), e.push(o), u.push(r), o;\n  }, n.map = function(r) {\n    return n._map(r, n._state !== \"active\");\n  };\n  var c;\n  function f() {\n    return c = i(), c.map(function(r) {\n      return r === !0 && (n._parents.forEach(function(a) {\n        a._unregisterChild(n);\n      }), n._state = \"ended\", n._parents.length = e.length = u.length = 0), r;\n    }), c;\n  }\n  return n.toJSON = function() {\n    return t != null && typeof t.toJSON == \"function\" ? t.toJSON() : t;\n  }, n[\"fantasy-land/map\"] = n.map, n[\"fantasy-land/ap\"] = function(r) {\n    return p(\n      function(a, o) {\n        return a()(o());\n      },\n      [r, n]\n    );\n  }, n._unregisterChild = function(r) {\n    var a = e.indexOf(r);\n    a !== -1 && (e.splice(a, 1), u.splice(a, 1));\n  }, Object.defineProperty(n, \"end\", {\n    get: function() {\n      return c || f();\n    }\n  }), n;\n};\nfunction p(t, e) {\n  var u = e.every(function(a) {\n    if (a.constructor !== i)\n      throw new Error(\n        \"Ensure that each item passed to stream.combine/stream.merge/lift is a stream.\"\n      );\n    return a._state === \"active\";\n  }), n = u ? i(t.apply(null, e.concat([e]))) : i(), c = [], f = e.map(function(a) {\n    return a._map(function(o) {\n      return c.push(a), (u || e.every(function(m) {\n        return m._state !== \"pending\";\n      })) && (u = !0, n(t.apply(null, e.concat([c]))), c = []), o;\n    }, !0);\n  }), r = n.end.map(function(a) {\n    a === !0 && (f.forEach(function(o) {\n      o.end(!0);\n    }), r.end(!0));\n  });\n  return n;\n}\ni.SKIP = {};\ni.lift = _;\ni.scan = h;\ni.merge = g;\ni.combine = p;\ni.scanMerge = l;\ni[\"fantasy-land/of\"] = i;\nvar d = !1;\nObject.defineProperty(i, \"HALT\", {\n  get: function() {\n    return d || console.log(\"HALT is deprecated and has been renamed to SKIP\"), d = !0, i.SKIP;\n  }\n});\nexport {\n  i as default\n};\n//# sourceMappingURL=mithril-stream-standalone.module.js.map\n","import Stream from \"mithril-stream-standalone\";\nconst calculateNewIndex = (state, index) => {\n  if (index === void 0 || Number.isNaN(index)) {\n    return {\n      newIndex: state.index,\n      shouldUpdate: false\n    };\n  }\n  const newIndex = Math.min(index, state.count - 1);\n  const isValid = newIndex >= 0 && newIndex < state.count;\n  const shouldUpdate = isValid && newIndex !== state.index;\n  return {\n    newIndex,\n    shouldUpdate\n  };\n};\nconst setIndex = (state) => (change) => {\n  const { newIndex, shouldUpdate } = calculateNewIndex(state, change.index);\n  return shouldUpdate ? {\n    ...state,\n    ...change.animate ? void 0 : { index: newIndex },\n    targetIndex: newIndex,\n    isAnimating: !!change.animate\n  } : state;\n};\nconst setLocation = (state) => (change) => {\n  if (!state.locations || state.locations.length === 0) {\n    return state;\n  }\n  let locationStr = change.location.toString();\n  let index = state.locations.indexOf(locationStr);\n  if (index === -1) {\n    index = 0;\n    locationStr = state.locations[index];\n  }\n  const shouldAnimate = state.location === void 0 ? false : change.animate !== false;\n  const newState = {\n    ...state,\n    location: locationStr\n  };\n  const indexChange = {\n    index,\n    animate: shouldAnimate\n  };\n  return setIndex(newState)(indexChange);\n};\nconst lookupLocation = (state) => (changeFn) => {\n  if (!state.locations || !state.location) {\n    return void 0;\n  }\n  const index = state.locations.indexOf(state.location);\n  if (index === -1) {\n    return void 0;\n  }\n  return state.locations[changeFn(index)];\n};\nconst getInitialState = ({\n  index = 0,\n  count = 0,\n  sideViews = 1,\n  location,\n  locations\n} = {}) => {\n  const slots = Array.from({ length: 1 + sideViews * 2 }, (_, i) => i).map(\n    (_, i) => i - sideViews\n  );\n  const initialState = {\n    targetIndex: index,\n    index,\n    count,\n    ...Array.isArray(locations) ? {\n      locations,\n      count: locations ? locations.length : 0,\n      location: locations[0]\n    } : void 0,\n    ...location ? {\n      location,\n      index: Array.isArray(locations) ? locations.indexOf(location) || index : index\n    } : void 0,\n    isAnimating: false,\n    direction: \"ltr\",\n    // set by libs glissando-mithril etc\n    slots,\n    sideViews\n  };\n  initialState.targetIndex = initialState.index;\n  return initialState;\n};\nconst GlissandoModel = (props = {}) => {\n  const initialState = getInitialState(props);\n  const glissandoState = {\n    initialState,\n    actions: (update2) => ({\n      previous: ({ animate } = { animate: true }) => {\n        update2(\n          (state) => setIndex(state)({\n            index: state.index - 1,\n            animate: animate !== false\n          })\n        );\n      },\n      next: ({ animate } = { animate: true }) => {\n        update2(\n          (state) => setIndex(state)({\n            index: state.index + 1,\n            animate: animate !== false\n          })\n        );\n      },\n      goTo: ({\n        index,\n        location,\n        animate\n      }) => {\n        update2((state) => {\n          if (location) {\n            const change2 = {\n              location,\n              animate\n            };\n            return setLocation(state)(change2);\n          }\n          if (index === void 0) {\n            return state;\n          }\n          const change = {\n            index,\n            animate\n          };\n          return setIndex(state)(change);\n        });\n      },\n      finalize: (index) => {\n        update2(\n          (state) => setIndex(state)({\n            index,\n            animate: false\n          })\n        );\n      },\n      setCount: (count) => {\n        update2(\n          (state) => setIndex({\n            ...state,\n            count\n          })({ index: state.index })\n        );\n      },\n      setDirection: (direction) => {\n        update2((state) => ({\n          ...state,\n          direction\n        }));\n      },\n      setLocations: (locations) => {\n        update2((state) => ({\n          ...state,\n          locations,\n          count: locations.length\n        }));\n      }\n    }),\n    selectors: (states2) => ({\n      hasNext: () => {\n        const state = states2();\n        return state.index < state.count - 1;\n      },\n      hasPrevious: () => {\n        const state = states2();\n        return state.index > 0;\n      },\n      isAnimating: () => {\n        const state = states2();\n        return state.isAnimating;\n      },\n      getViewIndices: () => {\n        const state = states2();\n        return state.slots.map((slotIndex) => {\n          let index = slotIndex + state.index + 0;\n          if (slotIndex < 0 && state.targetIndex < state.index) {\n            index = slotIndex + state.targetIndex + 1;\n          } else if (slotIndex > 0 && state.targetIndex > state.index) {\n            index = slotIndex + state.targetIndex - 1;\n          }\n          return index;\n        });\n      },\n      getLocation: () => {\n        const state = states2();\n        return lookupLocation(state)((index) => index);\n      },\n      getNextLocation: () => {\n        const state = states2();\n        return lookupLocation(state)((index) => index + 1);\n      },\n      getPreviousLocation: () => {\n        const state = states2();\n        return lookupLocation(state)((index) => index - 1);\n      }\n    })\n  };\n  const update = Stream();\n  const states = Stream.scan(\n    (state, patch) => patch(state),\n    {\n      ...glissandoState.initialState\n    },\n    update\n  );\n  const actions = {\n    ...glissandoState.actions(update)\n  };\n  const selectors = {\n    ...glissandoState.selectors(states)\n  };\n  const changedStates = Stream.scan(\n    (state, value) => JSON.stringify(state, null, 2) === JSON.stringify(value, null, 2) ? Stream.SKIP : value,\n    Stream.SKIP,\n    states\n  );\n  const getChanges = Stream.lift(\n    (value) => value,\n    changedStates\n  );\n  return {\n    getState: states,\n    getChanges,\n    ...actions,\n    ...selectors\n  };\n};\nconst getSliderStyle = (state) => {\n  const slotCount = 2 * state.sideViews + 1;\n  const slotWidth = 100 / slotCount;\n  const direction = state.direction === \"rtl\" ? 1 : -1;\n  let sliderTranslateX = direction * slotWidth * (state.sideViews + 0);\n  if (state.targetIndex > state.index) {\n    sliderTranslateX = direction * slotWidth * (state.sideViews + 1);\n  } else if (state.targetIndex < state.index) {\n    sliderTranslateX = direction * slotWidth * (state.sideViews - 1);\n  }\n  const style = {\n    width: `calc(${slotCount} * calc(100%))`,\n    transform: `translateX(${sliderTranslateX}%)`,\n    ...!state.isAnimating ? {\n      transitionDuration: \"0ms\"\n    } : void 0\n  };\n  const className = state.isAnimating ? \"glissando-animating\" : \"\";\n  return { style, className };\n};\nexport {\n  GlissandoModel,\n  getSliderStyle\n};\n//# sourceMappingURL=glissando.module.js.map\n","import { getSliderStyle, Glissando } from 'glissando';\nimport m, { ClosureComponent } from 'mithril';\n\ninterface Attrs {\n  model: Glissando.Model;\n  location?: string;\n  locations?: string[];\n  className?: string;\n}\n\ntype TGlissandoSlider = ClosureComponent<Attrs>;\n\nexport const GlissandoSlider: TGlissandoSlider = initialVnode => {\n  const { model } = initialVnode.attrs;\n  const {\n    getState,\n    finalize,\n    setCount,\n    setDirection,\n    getViewIndices,\n    goTo,\n    setLocations,\n  } = model;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const onTransitionEnd = () => {\n    finalize(getState().targetIndex);\n  };\n\n  return {\n    onupdate: ({ dom, children, attrs }) => {\n      const { locations, location } = attrs;\n\n      // Children count\n      const count = (children as m.ChildArray).length;\n      if (count !== getState().count) {\n        setCount(count);\n      }\n\n      // Locations\n      if (\n        locations &&\n        JSON.stringify(locations) !== JSON.stringify(getState().locations)\n      ) {\n        setLocations(locations);\n      }\n\n      // Location\n      if (location && location !== getState().location) {\n        goTo({ location });\n      }\n\n      // Reading direction\n      const { direction } = getComputedStyle(dom);\n      if (direction !== getState().direction) {\n        setDirection(direction as Glissando.Direction);\n      }\n    },\n    view: ({ children, attrs }) => {\n      if (!children) {\n        return null;\n      }\n      const { className: sliderClassName } = attrs;\n      const { className, style } = getSliderStyle(getState());\n\n      return m(\n        'div',\n        {\n          className: ['glissando', sliderClassName].join(' '),\n        },\n        m(\n          '.glissando-slider',\n          {\n            oncreate: (vnode: m.VnodeDOM) => {\n              vnode.dom.addEventListener('transitionend', onTransitionEnd);\n            },\n            onremove: (vnode: m.VnodeDOM) => {\n              vnode.dom.removeEventListener('transitionend', onTransitionEnd);\n            },\n            className,\n            style,\n          },\n          getViewIndices().map(viewIndex =>\n            m('.glissando-page', (children as m.ChildArray)[viewIndex]),\n          ),\n        ),\n      );\n    },\n  };\n};\n","import { Glissando, GlissandoModel } from 'glissando';\nimport m from 'mithril';\n\n/**\n * Wrapper around GlissandoModel that subscribes to changes and causes Mithril to redraw on each change.\n */\nexport const useGlissandoModel = (initialState?: Glissando.InitialState) => {\n  const model = GlissandoModel(initialState);\n\n  // Subscribe to changes\n  model.getState.map(m.redraw);\n\n  return model;\n};\n"],"names":["m","_","i","Stream"],"mappings":"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"}