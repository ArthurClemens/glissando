{"version":3,"file":"glissando.umd.js","sources":["../../../node_modules/mithril-stream-standalone/dist/mithril-stream-standalone.module.js","../src/GlissandoModel.ts","../src/util.ts"],"sourcesContent":["function g(t) {\n  return p(function() {\n    return t.map(function(e) {\n      return e();\n    });\n  }, t);\n}\nfunction h(t, e, u) {\n  var n = u.map(function(c) {\n    var f = t(e, c);\n    return f !== i.SKIP && (e = f), f;\n  });\n  return n(e), n;\n}\nfunction l(t, e) {\n  var u = t.map(function(c) {\n    return c[0];\n  }), n = p(function() {\n    var c = arguments[arguments.length - 1];\n    return u.forEach(function(f, r) {\n      c.indexOf(f) > -1 && (e = t[r][1](e, f()));\n    }), e;\n  }, u);\n  return n(e), n;\n}\nfunction _() {\n  var t = arguments[0], e = Array.prototype.slice.call(arguments, 1);\n  return g(e).map(function(u) {\n    return t.apply(void 0, u);\n  });\n}\nfunction s(t) {\n  return t._state === \"pending\" || t._state === \"active\" || t._state === \"changing\";\n}\nvar i = function(t) {\n  var e = [], u = [];\n  function n(r) {\n    return arguments.length && r !== i.SKIP && (t = r, s(n) && (n._changing(), n._state = \"active\", e.slice().forEach(function(a, o) {\n      s(a) && a(this[o](t));\n    }, u.slice()))), t;\n  }\n  n.constructor = i, n._state = arguments.length && t !== i.SKIP ? \"active\" : \"pending\", n._parents = [], n._changing = function() {\n    s(n) && (n._state = \"changing\"), e.forEach(function(r) {\n      r._changing();\n    });\n  }, n._map = function(r, a) {\n    var o = a ? i() : i(r(t));\n    return o._parents.push(n), e.push(o), u.push(r), o;\n  }, n.map = function(r) {\n    return n._map(r, n._state !== \"active\");\n  };\n  var c;\n  function f() {\n    return c = i(), c.map(function(r) {\n      return r === !0 && (n._parents.forEach(function(a) {\n        a._unregisterChild(n);\n      }), n._state = \"ended\", n._parents.length = e.length = u.length = 0), r;\n    }), c;\n  }\n  return n.toJSON = function() {\n    return t != null && typeof t.toJSON == \"function\" ? t.toJSON() : t;\n  }, n[\"fantasy-land/map\"] = n.map, n[\"fantasy-land/ap\"] = function(r) {\n    return p(\n      function(a, o) {\n        return a()(o());\n      },\n      [r, n]\n    );\n  }, n._unregisterChild = function(r) {\n    var a = e.indexOf(r);\n    a !== -1 && (e.splice(a, 1), u.splice(a, 1));\n  }, Object.defineProperty(n, \"end\", {\n    get: function() {\n      return c || f();\n    }\n  }), n;\n};\nfunction p(t, e) {\n  var u = e.every(function(a) {\n    if (a.constructor !== i)\n      throw new Error(\n        \"Ensure that each item passed to stream.combine/stream.merge/lift is a stream.\"\n      );\n    return a._state === \"active\";\n  }), n = u ? i(t.apply(null, e.concat([e]))) : i(), c = [], f = e.map(function(a) {\n    return a._map(function(o) {\n      return c.push(a), (u || e.every(function(m) {\n        return m._state !== \"pending\";\n      })) && (u = !0, n(t.apply(null, e.concat([c]))), c = []), o;\n    }, !0);\n  }), r = n.end.map(function(a) {\n    a === !0 && (f.forEach(function(o) {\n      o.end(!0);\n    }), r.end(!0));\n  });\n  return n;\n}\ni.SKIP = {};\ni.lift = _;\ni.scan = h;\ni.merge = g;\ni.combine = p;\ni.scanMerge = l;\ni[\"fantasy-land/of\"] = i;\nvar d = !1;\nObject.defineProperty(i, \"HALT\", {\n  get: function() {\n    return d || console.log(\"HALT is deprecated and has been renamed to SKIP\"), d = !0, i.SKIP;\n  }\n});\nexport {\n  i as default\n};\n//# sourceMappingURL=mithril-stream-standalone.module.js.map\n","import Stream from 'mithril-stream-standalone';\n\nimport type { Glissando } from './types';\n\ntype PatchFn = (state: Glissando.State) => Glissando.State;\n\nconst calculateNewIndex = (\n  state: Glissando.State,\n  index: number | undefined,\n) => {\n  if (index === undefined || Number.isNaN(index)) {\n    return {\n      newIndex: state.index,\n      shouldUpdate: false,\n    };\n  }\n  const newIndex = Math.min(index, state.count - 1);\n  const isValid = newIndex >= 0 && newIndex < state.count;\n  const shouldUpdate = isValid && newIndex !== state.index;\n  return {\n    newIndex,\n    shouldUpdate,\n  };\n};\n\nconst setIndex = (state: Glissando.State) => (\n  change: Glissando.IndexChange,\n) => {\n  const { newIndex, shouldUpdate } = calculateNewIndex(state, change.index);\n  return shouldUpdate\n    ? {\n        ...state,\n        ...(change.animate ? undefined : { index: newIndex }),\n        targetIndex: newIndex,\n        isAnimating: !!change.animate,\n      }\n    : state;\n};\n\nconst setLocation = (state: Glissando.State) => (\n  change: Glissando.LocationChange,\n) => {\n  if (!state.locations || state.locations.length === 0) {\n    return state;\n  }\n  let locationStr = change.location.toString();\n  let index = state.locations.indexOf(locationStr);\n  if (index === -1) {\n    // Location does not exist; default to first index\n    index = 0;\n    locationStr = state.locations[index];\n  }\n  const shouldAnimate =\n    state.location === undefined\n      ? false // don't animate if we are setting the first location\n      : change.animate !== false;\n  const newState = {\n    ...state,\n    location: locationStr,\n  };\n  const indexChange: Glissando.IndexChange = {\n    index,\n    animate: shouldAnimate,\n  };\n  return setIndex(newState)(indexChange);\n};\n\ntype IndexLocationChange = (index: number) => number;\n\nconst lookupLocation = (state: Glissando.State) => (\n  changeFn: IndexLocationChange,\n) => {\n  if (!state.locations || !state.location) {\n    return undefined;\n  }\n  const index = state.locations.indexOf(state.location);\n  if (index === -1) {\n    return undefined;\n  }\n  return state.locations[changeFn(index)];\n};\n\nconst getInitialState = (\n  {\n    index = 0,\n    count = 0,\n    sideViews = 1,\n    location,\n    locations,\n  }: Glissando.InitialState = {} as Glissando.InitialState,\n) => {\n  const slots = Array.from({ length: 1 + sideViews * 2 }, (_, i) => i).map(\n    (_, i) => i - sideViews,\n  );\n  const initialState: Glissando.State = {\n    targetIndex: index,\n    index,\n    count,\n    ...(Array.isArray(locations)\n      ? {\n          locations,\n          count: locations ? locations.length : 0,\n          location: locations[0],\n        }\n      : undefined),\n    ...(location\n      ? {\n          location,\n          index: Array.isArray(locations)\n            ? locations.indexOf(location) || index\n            : index,\n        }\n      : undefined),\n    isAnimating: false,\n    direction: 'ltr', // set by libs glissando-mithril etc\n    slots,\n    sideViews,\n  };\n  initialState.targetIndex = initialState.index;\n  return initialState;\n};\n\nexport const GlissandoModel = (\n  props: Glissando.InitialState = {} as Glissando.InitialState,\n) => {\n  const initialState = getInitialState(props);\n\n  const glissandoState = {\n    initialState,\n    actions: (update: Stream<PatchFn>) => ({\n      previous: ({ animate }: { animate?: boolean } = { animate: true }) => {\n        update((state: Glissando.State) =>\n          setIndex(state)({\n            index: state.index - 1,\n            animate: animate !== false,\n          }),\n        );\n      },\n      next: ({ animate }: { animate?: boolean } = { animate: true }) => {\n        update((state: Glissando.State) =>\n          setIndex(state)({\n            index: state.index + 1,\n            animate: animate !== false,\n          }),\n        );\n      },\n      goTo: ({\n        index,\n        location,\n        animate,\n      }: {\n        index?: number;\n        location?: Glissando.Location;\n        animate?: boolean;\n      }) => {\n        update((state: Glissando.State) => {\n          if (location) {\n            const change: Glissando.LocationChange = {\n              location,\n              animate,\n            };\n            return setLocation(state)(change);\n          }\n          if (index === undefined) {\n            return state;\n          }\n          const change: Glissando.IndexChange = {\n            index,\n            animate,\n          };\n          return setIndex(state)(change);\n        });\n      },\n      finalize: (index: number) => {\n        update((state: Glissando.State) =>\n          setIndex(state)({\n            index,\n            animate: false,\n          }),\n        );\n      },\n      setCount: (count: number) => {\n        update((state: Glissando.State) =>\n          setIndex({\n            ...state,\n            count,\n          })({ index: state.index }),\n        );\n      },\n      setDirection: (direction: Glissando.Direction) => {\n        update((state: Glissando.State) => ({\n          ...state,\n          direction,\n        }));\n      },\n      setLocations: (locations: Glissando.Location[]) => {\n        update((state: Glissando.State) => ({\n          ...state,\n          locations,\n          count: locations.length,\n        }));\n      },\n    }),\n\n    selectors: (states: Stream<Glissando.State>) => ({\n      hasNext: () => {\n        const state = states();\n        return state.index < state.count - 1;\n      },\n      hasPrevious: () => {\n        const state = states();\n        return state.index > 0;\n      },\n      isAnimating: () => {\n        const state = states();\n        return state.isAnimating;\n      },\n      getViewIndices: () => {\n        const state = states();\n        return state.slots.map(slotIndex => {\n          let index = slotIndex + state.index + 0;\n          if (slotIndex < 0 && state.targetIndex < state.index) {\n            index = slotIndex + state.targetIndex + 1;\n          } else if (slotIndex > 0 && state.targetIndex > state.index) {\n            index = slotIndex + state.targetIndex - 1;\n          }\n          return index;\n        });\n      },\n      getLocation: () => {\n        const state = states();\n        return lookupLocation(state)(index => index);\n      },\n      getNextLocation: () => {\n        const state = states();\n        return lookupLocation(state)(index => index + 1);\n      },\n      getPreviousLocation: () => {\n        const state = states();\n        return lookupLocation(state)(index => index - 1);\n      },\n    }),\n  };\n\n  const update: Stream<PatchFn> = Stream<PatchFn>();\n\n  const states: Glissando.States = Stream.scan(\n    (state: Glissando.State, patch: PatchFn) => patch(state),\n    {\n      ...glissandoState.initialState,\n    },\n    update,\n  );\n\n  // Debugging:\n  // states.map(state => console.log(JSON.stringify(state, null, 2)));\n\n  const actions = {\n    ...glissandoState.actions(update),\n  };\n\n  const selectors: Glissando.Selectors = {\n    ...glissandoState.selectors(states),\n  };\n\n  const changedStates: Glissando.ChangedStates = Stream.scan(\n    (state: Glissando.ChangedState, value) =>\n      JSON.stringify(state, null, 2) === JSON.stringify(value, null, 2)\n        ? Stream.SKIP\n        : value,\n    Stream.SKIP,\n    states,\n  );\n\n  const getChanges = Stream.lift(\n    value => value as Glissando.State,\n    changedStates,\n  );\n\n  return {\n    getState: states,\n    getChanges,\n    ...actions,\n    ...selectors,\n  } as Glissando.Model;\n};\n","import type { Glissando } from './types';\n\n/**\n * Returns the classname and style object for the current model state.\n * Usage:\n *\n * const { className, style } = getSliderStyle(getState());\n * ...\n * <div\n *   className={`glissando-slider ${className}`}\n *   style={style}\n * >\n */\nexport const getSliderStyle = (state: Glissando.State) => {\n  const slotCount = 2 * state.sideViews + 1;\n  const slotWidth = 100 / slotCount;\n  const direction = state.direction === 'rtl' ? 1 : -1;\n  let sliderTranslateX: number = direction * slotWidth * (state.sideViews + 0);\n  if (state.targetIndex > state.index) {\n    sliderTranslateX = direction * slotWidth * (state.sideViews + 1);\n  } else if (state.targetIndex < state.index) {\n    sliderTranslateX = direction * slotWidth * (state.sideViews - 1);\n  }\n\n  const style = {\n    width: `calc(${slotCount} * calc(100%))`,\n    transform: `translateX(${sliderTranslateX}%)`,\n    ...(!state.isAnimating\n      ? {\n          transitionDuration: '0ms',\n        }\n      : undefined),\n  };\n  const className = state.isAnimating ? 'glissando-animating' : '';\n  return { style, className };\n};\n"],"names":["_","i","update","change","states","Stream"],"mappings":"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"}